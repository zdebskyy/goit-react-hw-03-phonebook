{"version":3,"sources":["components/InputForm.js","components/ContactForm.js","components/SectionTitle.js","components/ContactList.js","components/Filter.js","App.js","index.js"],"names":["InputForm","label","placeholder","type","value","onInput","autoComplete","onChange","e","target","ContactForm","state","name","number","handleInput","setState","handleNumber","handleSubmit","preventDefault","props","allContacts","map","el","find","alert","onAddContact","this","onSubmit","Component","SectionTitle","title","children","ContactList","contacts","onRemome","contact","key","id","onClick","Filter","onChangeFilter","App","filter","changeFilter","getFiteredContact","toLowerCase","includes","addContact","uuidv4","prevState","removeContact","contactId","lsContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17b55b4b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction InputForm({ label, placeholder, type, value, onInput }) {\n  return (\n    <>\n      <label>\n        {label}\n        <input\n          placeholder={placeholder}\n          autoComplete=\"off\"\n          type={type}\n          value={value}\n          onChange={(e) => onInput(e.target.value)}\n        ></input>\n      </label>\n    </>\n  );\n}\n\nInputForm.propTypes = {\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onInput: PropTypes.func.isRequired,\n};\n\nexport default InputForm;\n","import React, { Component } from \"react\";\nimport InputForm from \"./InputForm\";\nimport PropTypes from \"prop-types\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  static propTypes = {\n    allContacts: PropTypes.array.isRequired,\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  handleInput = (value) => {\n    this.setState({ name: value });\n  };\n  handleNumber = (value) => {\n    this.setState({ number: value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const contactName = this.props.allContacts.map((el) => {\n      return el.name;\n    });\n    const validation = contactName.find((el) => el === this.state.name);\n\n    validation === this.state.name\n      ? alert(\"This contact name already exist\")\n      : this.props.onAddContact(this.state);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <InputForm\n          label=\"Name\"\n          placeholder=\"Enter name\"\n          type=\"text\"\n          value={name}\n          onInput={this.handleInput}\n        />\n        <InputForm\n          label=\"Number\"\n          placeholder=\"Enter number\"\n          type=\"number\"\n          value={number}\n          onInput={this.handleNumber}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction SectionTitle({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default SectionTitle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nfunction ContactList({ contacts, onRemome }) {\n  return (\n    <ul>\n      {contacts.map((contact) => (\n        <li key={contact.id}>\n          <span>\n            {contact.name} : {contact.number}\n            <button type=\"button\" onClick={() => onRemome(contact.id)}>\n              Delete\n            </button>\n          </span>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onRemove: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Filter({ value, onChangeFilter }) {\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChangeFilter(e.target.value)}\n    ></input>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport SectionTitle from \"./components/SectionTitle\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  componentDidMount() {\n    const lsContacts = localStorage.getItem(\"contacts\");\n\n    if (lsContacts) {\n      this.setState({\n        contacts: JSON.parse(lsContacts),\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n  getFiteredContact = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.setState((prevState) => {\n      return { contacts: [...prevState.contacts, contact] };\n    });\n  };\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(\n          (contact) => contact.id !== contactId\n        ),\n      };\n    });\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const filteredContacts = this.getFiteredContact();\n    return (\n      <div>\n        <SectionTitle title=\"PhoneBook\">\n          <ContactForm onAddContact={this.addContact} allContacts={contacts} />\n        </SectionTitle>\n        <SectionTitle title=\"Contacts\">\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n          <ContactList\n            contacts={filteredContacts}\n            onRemome={this.removeContact}\n          />\n        </SectionTitle>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}